<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='CovidDashboardLearning_17395466367020' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Tableau table 4)' inline='true' name='federated.0q44cgi15o89ys1aymoxs192d0z2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau table 4' name='excel-direct.1v9mkt11ar880r12dn8l40w9jprq'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Ulum/Desktop/Tableau table 4.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1v9mkt11ar880r12dn8l40w9jprq' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='string' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_896E48F957E449B79EBAC76F7BC1AE99]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_896E48F957E449B79EBAC76F7BC1AE99]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_896E48F957E449B79EBAC76F7BC1AE99]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_896E48F957E449B79EBAC76F7BC1AE99]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_896E48F957E449B79EBAC76F7BC1AE99]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_896E48F957E449B79EBAC76F7BC1AE99]' role='measure' type='quantitative' />
      <column caption='Date' datatype='string' name='[date]' role='dimension' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Ulum/AppData/Local/Temp/TableauTemp/#TableauTemp_0rcohms1s6hjqn111icle08hm99g.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='02/14/2025 01:39:19 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>435</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Sheet1_896E48F957E449B79EBAC76F7BC1AE99]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>435</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_896E48F957E449B79EBAC76F7BC1AE99]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>129</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5136</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Sheet1_896E48F957E449B79EBAC76F7BC1AE99]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>50361</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_896E48F957E449B79EBAC76F7BC1AE99]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80873</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_896E48F957E449B79EBAC76F7BC1AE99]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_896E48F957E449B79EBAC76F7BC1AE99'>
            <properties context=''>
              <relation connection='excel-direct.1v9mkt11ar880r12dn8l40w9jprq' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='string' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau table 1)' inline='true' name='federated.0scm0l10wl7t6r1er2ucc1mf66oa' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau table 1' name='excel-direct.08xsyem036q5fd1dbbk281ohe6ym'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Ulum/Desktop/Tableau table 1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.08xsyem036q5fd1dbbk281ohe6ym' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='integer' name='DeathPercentage' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_FCB73C81DACE4955A12250E5803FC6E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_FCB73C81DACE4955A12250E5803FC6E4]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_FCB73C81DACE4955A12250E5803FC6E4]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='integer' name='[DeathPercentage]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_FCB73C81DACE4955A12250E5803FC6E4]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Ulum/AppData/Local/Temp/TableauTemp/#TableauTemp_161rovc0l2na6n1f8sq1n117zqmd.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='02/14/2025 02:00:21 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Sheet1 (Tableau table 1)' increment-value='%null%' refresh-type='create' rows-inserted='1' timestamp-start='2025-02-14 14:00:20.905' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_FCB73C81DACE4955A12250E5803FC6E4'>
            <properties context=''>
              <relation connection='excel-direct.08xsyem036q5fd1dbbk281ohe6ym' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='integer' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau table 2)' inline='true' name='federated.0vk7nha12kodtz14ueo6w12cj9im' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau table 2' name='excel-direct.1usemwa1qltzvv1agsaqd062w690'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Ulum/Desktop/Tableau table 2.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1usemwa1qltzvv1agsaqd062w690' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_65F8084F3D954670AF938419BB0A7131]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_65F8084F3D954670AF938419BB0A7131]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_65F8084F3D954670AF938419BB0A7131]' role='measure' type='quantitative' />
      <column caption='CONTINENT' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Ulum/AppData/Local/Temp/TableauTemp/#TableauTemp_0xouvxb0qloi7d16s7zuv0hohsq7.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='02/14/2025 01:37:56 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_65F8084F3D954670AF938419BB0A7131'>
            <properties context=''>
              <relation connection='excel-direct.1usemwa1qltzvv1agsaqd062w690' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau table 3)' inline='true' name='federated.16mfldx0gm1nej13ifzc40qpgg44' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau table 3' name='excel-direct.1gfj16y0s8tzao11hlvu31n94p2m'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Ulum/Desktop/Tableau table 3.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1gfj16y0s8tzao11hlvu31n94p2m' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D245:no:A1:D245:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D245:no:A1:D245:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_65A3C9D142B34C8D8263AB3028F8545A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_65A3C9D142B34C8D8263AB3028F8545A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_65A3C9D142B34C8D8263AB3028F8545A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_65A3C9D142B34C8D8263AB3028F8545A]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_65A3C9D142B34C8D8263AB3028F8545A]' role='measure' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Ulum/AppData/Local/Temp/TableauTemp/#TableauTemp_0lnbfnx1hz63do1ctw3u608jms9f.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='02/14/2025 01:38:46 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>244</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>243</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>230</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>229</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_65A3C9D142B34C8D8263AB3028F8545A'>
            <properties context=''>
              <relation connection='excel-direct.1gfj16y0s8tzao11hlvu31n94p2m' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D245:no:A1:D245:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau table 5)' inline='true' name='federated.1oc99fq14absbu1extokb1kc0rhc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau table 5' name='excel-direct.00tg1dd1iv5w3m10wl7e60cgeajb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Ulum/Desktop/Tableau table 5.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.00tg1dd1iv5w3m10wl7e60cgeajb' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_195A9531BEA041E6BC8A437462E25656]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_195A9531BEA041E6BC8A437462E25656]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_195A9531BEA041E6BC8A437462E25656]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_195A9531BEA041E6BC8A437462E25656]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Sheet1_195A9531BEA041E6BC8A437462E25656]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_195A9531BEA041E6BC8A437462E25656]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Ulum/AppData/Local/Temp/TableauTemp/#TableauTemp_078606j00libon19in0z60o12tdv.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='02/14/2025 02:28:00 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>448</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[Sheet1_195A9531BEA041E6BC8A437462E25656]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>448</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_195A9531BEA041E6BC8A437462E25656]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>4632</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_195A9531BEA041E6BC8A437462E25656]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>43600</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_195A9531BEA041E6BC8A437462E25656]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>65991</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Sheet1_195A9531BEA041E6BC8A437462E25656]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Indonesia&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_195A9531BEA041E6BC8A437462E25656'>
            <properties context=''>
              <relation connection='excel-direct.00tg1dd1iv5w3m10wl7e60cgeajb' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Number&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau table 1)' name='federated.0scm0l10wl7t6r1er2ucc1mf66oa' />
          </datasources>
          <datasource-dependencies datasource='federated.0scm0l10wl7t6r1er2ucc1mf66oa'>
            <column caption='Death Percentage' datatype='integer' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0scm0l10wl7t6r1er2ucc1mf66oa].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0scm0l10wl7t6r1er2ucc1mf66oa].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0scm0l10wl7t6r1er2ucc1mf66oa].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0scm0l10wl7t6r1er2ucc1mf66oa].[sum:DeathPercentage:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0scm0l10wl7t6r1er2ucc1mf66oa].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0scm0l10wl7t6r1er2ucc1mf66oa].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0scm0l10wl7t6r1er2ucc1mf66oa].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0scm0l10wl7t6r1er2ucc1mf66oa].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0scm0l10wl7t6r1er2ucc1mf66oa].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0scm0l10wl7t6r1er2ucc1mf66oa].[:Measure Names]' value='143' />
            <format attr='height' value='31' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='text-format' field='[federated.0scm0l10wl7t6r1er2ucc1mf66oa].[Multiple Values]' value='' />
            <format attr='text-format' field='[federated.0scm0l10wl7t6r1er2ucc1mf66oa].[sum:DeathPercentage:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#b4b4b4' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f0f3fa' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='4' />
            <format attr='stroke-color' value='#555555' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0scm0l10wl7t6r1er2ucc1mf66oa].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0scm0l10wl7t6r1er2ucc1mf66oa].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{39585D55-7E6E-4E4E-AD47-9CD1A80E1C93}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Death per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau table 2)' name='federated.0vk7nha12kodtz14ueo6w12cj9im' />
          </datasources>
          <datasource-dependencies datasource='federated.0vk7nha12kodtz14ueo6w12cj9im'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='CONTINENT' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0vk7nha12kodtz14ueo6w12cj9im].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0vk7nha12kodtz14ueo6w12cj9im].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vk7nha12kodtz14ueo6w12cj9im].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0vk7nha12kodtz14ueo6w12cj9im].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{32C0B475-BFCD-48FD-B5AE-495707556D92}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Populated Infected per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau table 3)' name='federated.16mfldx0gm1nej13ifzc40qpgg44' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.16mfldx0gm1nej13ifzc40qpgg44'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.16mfldx0gm1nej13ifzc40qpgg44].[Longitude (generated)]' field-type='quantitative' max='23055638.154833756' min='2935966.5495798979' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.16mfldx0gm1nej13ifzc40qpgg44].[Latitude (generated)]' field-type='quantitative' max='5507163.4113309868' min='-1821418.6626458424' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16mfldx0gm1nej13ifzc40qpgg44].[sum:PercentPopulationInfected:qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.16mfldx0gm1nej13ifzc40qpgg44].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected per Country'>
              <formatted-text>
                <run>Percent Population Infected per Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.16mfldx0gm1nej13ifzc40qpgg44].[none:Location:nk]' />
              <color column='[federated.16mfldx0gm1nej13ifzc40qpgg44].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.16mfldx0gm1nej13ifzc40qpgg44].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-size' value='6' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16mfldx0gm1nej13ifzc40qpgg44].[Latitude (generated)]</rows>
        <cols>[federated.16mfldx0gm1nej13ifzc40qpgg44].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B1031456-378F-41EB-958D-A3A3C5AA6DCF}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Populated Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau table 5)' name='federated.1oc99fq14absbu1extokb1kc0rhc' />
          </datasources>
          <datasource-dependencies datasource='federated.1oc99fq14absbu1extokb1kc0rhc'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1oc99fq14absbu1extokb1kc0rhc].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1oc99fq14absbu1extokb1kc0rhc].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1oc99fq14absbu1extokb1kc0rhc].[tdy:date:qk]' field-type='quantitative' max='#2023-01-31 14:23:50.400#' min='#2020-02-01 02:50:32#' range-type='fixed' scope='cols' type='space' />
            <format attr='width' field='[federated.1oc99fq14absbu1extokb1kc0rhc].[fVal:avg:PercentPopulationInfected:qk]' value='69' />
            <encoding attr='space' class='0' field='[federated.1oc99fq14absbu1extokb1kc0rhc].[fVal:avg:PercentPopulationInfected:qk]' field-type='quantitative' max='50.835392839344287' min='-6.9177535686640379' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1oc99fq14absbu1extokb1kc0rhc].[tdy:date:qk]' value='153' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1oc99fq14absbu1extokb1kc0rhc].[none:Location:nk]' />
              <text column='[federated.1oc99fq14absbu1extokb1kc0rhc].[none:Location:nk]' />
              <color column='[federated.1oc99fq14absbu1extokb1kc0rhc].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1oc99fq14absbu1extokb1kc0rhc].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.1oc99fq14absbu1extokb1kc0rhc].[tdy:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{028EB2D5-1DB3-4812-8CFC-5A5084600972}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97102' id='7' param='horz' type-v2='layout-flow' w='98614' x='693' y='1449'>
            <zone h='97102' id='5' type-v2='layout-basic' w='98614' x='693' y='1449'>
              <zone h='35326' id='9' name='Sheet 2' w='38355' x='693' y='21196'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='55073' id='11' name='Sheet 3' w='60259' x='39048' y='1449'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='42029' id='13' name='Sheet 4' w='86425' x='693' y='56522'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='19747' id='15' name='Sheet 1' w='38355' x='693' y='1449'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='42029' id='14' name='Sheet 4' pane-specification-id='0' param='[federated.1oc99fq14absbu1extokb1kc0rhc].[none:Location:nk]&#10;[federated.1oc99fq14absbu1extokb1kc0rhc].[none:Forecast Indicator:nk]' type-v2='color' w='12189' x='87118' y='56522'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='26' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97102' id='25' param='vert' type-v2='layout-flow' w='98614' x='693' y='1449'>
                <zone fixed-size='150' h='19747' id='15' is-fixed='true' name='Sheet 1' w='38355' x='693' y='1449'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='55073' id='11' is-fixed='true' name='Sheet 3' w='60259' x='39048' y='1449'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='274' h='35326' id='9' is-fixed='true' name='Sheet 2' w='38355' x='693' y='21196'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42029' id='13' is-fixed='true' name='Sheet 4' w='86425' x='693' y='56522'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='42029' id='14' name='Sheet 4' pane-specification-id='0' param='[federated.1oc99fq14absbu1extokb1kc0rhc].[none:Location:nk]&#10;[federated.1oc99fq14absbu1extokb1kc0rhc].[none:Forecast Indicator:nk]' type-v2='color' w='12189' x='87118' y='56522'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2B78A82B-DE5B-46D0-A149-9F4C36EFDDD0}' />
    </dashboard>
  </dashboards>
  <windows source-height='114'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0scm0l10wl7t6r1er2ucc1mf66oa].[:Measure Names]' show-morefewerbutton='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.0scm0l10wl7t6r1er2ucc1mf66oa].[:Measure Names]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;[federated.0scm0l10wl7t6r1er2ucc1mf66oa].[sum:total_deaths:qk]&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0scm0l10wl7t6r1er2ucc1mf66oa].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{50B2E39C-2DE5-444D-A843-BE6961358053}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vk7nha12kodtz14ueo6w12cj9im].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vk7nha12kodtz14ueo6w12cj9im].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{65E8A330-2478-4732-992D-1836F7476514}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.16mfldx0gm1nej13ifzc40qpgg44].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16mfldx0gm1nej13ifzc40qpgg44].[none:Location:nk]</field>
            <field>[federated.16mfldx0gm1nej13ifzc40qpgg44].[sum:PercentPopulationInfected:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{78CDA53F-A9D4-4ADD-B1AD-A47EC3E0AB6F}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1oc99fq14absbu1extokb1kc0rhc].[none:Location:nk]&#10;[federated.1oc99fq14absbu1extokb1kc0rhc].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1oc99fq14absbu1extokb1kc0rhc].[tdy:date:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0q44cgi15o89ys1aymoxs192d0z2].[none:date:nk]</field>
            <field>[federated.1oc99fq14absbu1extokb1kc0rhc].[attr:Location:nk]</field>
            <field>[federated.1oc99fq14absbu1extokb1kc0rhc].[none:Forecast Indicator:nk]</field>
            <field>[federated.1oc99fq14absbu1extokb1kc0rhc].[none:Location:nk]</field>
            <field>[federated.1oc99fq14absbu1extokb1kc0rhc].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{37D9B9FF-69A9-48A2-BC61-6C5114599F8B}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0vk7nha12kodtz14ueo6w12cj9im].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1oc99fq14absbu1extokb1kc0rhc].[none:Forecast Indicator:nk]</field>
              <field>[federated.1oc99fq14absbu1extokb1kc0rhc].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E133FB6D-8FD6-49C4-A8F1-D71DF466D198}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      SwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='55' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAA3CAYAAABaS0WmAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAL9klEQVR4nO2de3Qc1X3HP/PY92r1WEm7etiSjeXYuDKnNgEHP8AQSHxcKCQ0GFwI1DWJ
      D3WgOQeXkhQfk7o5J+RwIG6PTx4ukPqlUizxUAzBtWsM2D3m1EWuwa4fErYVS7t6rFb7nNmZ
      6R+SFmRpLVEkbGnm85d25s7vd3f2fu/9/e7MvRIMwzCwsDAp4uWugIXF5cQSgIWpsQRgYWos
      AViYGksAFqbGEoCFqbEEYGFq5JEKNDY2fhn1sBhHjhdUXe4qXLFYI4CFqbEEYGFqLAFYmBpL
      ABamxhKAhakZcRZootFxYDOb9rQNPXHNvWz41qyx9MSBzZsIL93AcGaT5w7QUP8uJztT4PRT
      c9t93Du/eAz9T2QucOxnf0tT69Az1X/5Il+rHSM3oUZ2b2yl9vmHqRx04ggHH32eFiahAIoX
      r2HDYoDj7Fq/j5K1a1g8ynZ3fNd69pWsZc1oL8iBHjrAb184RP6fPMyT8/yISpj/PpH4QjYn
      F2XMWfcicwCO/ooduytYvm45vlFde4SDj9bj+9HTzCn9InWYytwfPT35BHD5iXHkzX2kvraK
      1fP8fTGmvYR5Y9WrWYwpphNA8vSbbH3lA87HVWyFs7jx23eyeEqcA5s30Rc5bWL9HrIhU+xY
      PS81HiMUV8HmYfqilay4qQJHTg/n+eS0nRmLK4ZNsHLb0wkdrmP7W8fpVsHmqWTJ/atZUgZ6
      6DB129/ieLeK5Czjuu98l29e5QI9xOG67bx1vBsVG57KJdy/egll43TvvjzitNU/y/vvnyat
      OPDW3sGC+5ZTEmtk98aXiQBsfJAmBkKmT/i3H65H1WRspddx7SMPU10wOk/mEkDPYXZua2bq
      dx9jVZWbxEcNbH7hVQr+ZgWL12ygZLgQqGAed6+9nYBLRo99wLZn3uCDud9jYVEOH4pCmnxK
      8nKcz2Uv7xh738iw6PH1XOsFJdJCewbQm9n9L8eofvAJ7vXLZNr2s+U3r3L08RXM+t+9vJFZ
      xOPrr8WLQqSlncwY37LLQeK9f2T/yRqWPvUkpe44Z3f8HXt3+PnWquUse758aAik2PnTZ17E
      JqmEdj3Bvt1NVN87d1S+TCWAdMtJWmbcwH1VXkTAe/USFpRs4mQz1ObIjyX9LHt/vZ2TnSk0
      AIJU65dwYrfjoIdoLzBMKpHTnq2Y0qJm3t66k/Cc2cyaNYeqEqD1FCeizfT84ie8mbUSJNIL
      tuJSiprfZuvOMHNmz2LWnCpK/j835ooiRftHHxNc+iileRLgY+ptt3FsYxPtLLgome1HsvH6
      Ew+SVvo/f1UbtTdTCeDz08zebe8hL3uEJ6/xIfcn1pemkinVSd4/1Yo+7eIw6FL2yrj5kceY
      eeZjTjQ18er+RoqWreWBIOC6lgfW3c5VQ2Kqm3nksZmc+fgETU2vsr+xiGVrH2B+/th8+4lC
      8tAWbvz7LfgdEtE9T9E4zCRgLkz1HMBRXUP1qff5j09i6OjEPnqHQ+HZ1EzrP+9w0dPWRkwH
      XdcBFVWx4y1wI+sK4ROnaB/Ri5f5ty2Cg7t47X86yQC6Eua/jp69tL1YMx+eTuKffj233L2S
      u+a7aTnXDmXTqeEIe/79E2I6oCtEzp+kNQax5g85nfQz/fpbuHvlXcx3t3Bu5Ape4TgJXD2b
      tn0NhHo10KKc/f3vic6dSwAAFzZ3J5HzUXQ0dA20dAqPLKFFzvCH5s7P5c1cI0D+V1mxspOt
      dc+xYSAJfuhOavsz2mnX30rV1gae2fAytvn38+M7ZnDDLYVseeknHLaVMWfpNLyjcCNW3MrD
      DzlpqP8V//Dyp88B5lGZ254Nug7V8VxdJylNwumvYdmKGSCKfH3lUhrqt/Psuyk0yYm/agG3
      r6jBRheH6p6jrrP/eM0yVswYp3v3JeJe+FfcGHqWd59elU2Cb75vATYAZjHzjq+wf8cPqHvJ
      wVVrfsl1C+5gxw+/h3fmTUzzFzC6ROgsTRsfRBhpWxTrdeiJj/U6dG5MFQJZWFyMJQALU2MJ
      wMLUWAKwMDUjzgIFAoEvox4W40iA1OWuwhXLiLNAvb292b91wTnuFbIYO1b/xUq2bNmS/fyf
      0ctYmSsUKwSyMDWWACxMjSUAC1NjCcDC1FgCsDA1lgAsTI0lAAtTYwnAwtRYArAwNZYALEzN
      hF4R1nbhArHYp69qOJ1OyisqEUWRSHc3Xd1dGJqG2+OhpDSALPd93XQ6TTjUTjqVAkGgoLCQ
      oiI/giAM8aGqKj2RCIlEnNJAEKfz09dB4rEY4XCITCaDw+EkEAxit9uBviWV4VA7sd5eREmi
      tDSAxzv8erJMJkN72wWSySQ2m51A8FM/uXxkMhnOnztLJjN4+ZPT5aK8vAJRnNx9W0ZV2b9r
      B+/U16GmU/z4tw2483JtxQFN7+7jX5/7Kff89ZPULrwJgJ7O8MQVgK7rCIJA9bTp2YY9QDwe
      J5VOUVVVjSRJ9PZG6ewIUxoIomkaXZ0d+IuLcbncaJpGONROIpHA4/EMspPJZAiHQhQUFCBd
      5COdThON9lBROQWbzUYymaCjI0wgEESSJCKRbiRZZvqMGhQlTTgUxu5wYLPZBtkxDIOuzg68
      3jzKKypJJOJ0dnYQDJaRyWRy+pBlmepp0wfZ6u3tRdMyk77xAxz8XQMXWk6z7pfbcOX50FQl
      Z9l4T4QPD+yl9oYbs8c0LcPb216YuCGQYRggMOyPrSgK+fkFSJIEQF6eD0mSyKgqsixTVl6B
      y+UGQJIkPN48DGPoXieyLFNeUYHb4+HisUFVFbzevGyDdrncuFwulHQaTdNQ0mkKCgoRBAGH
      w4nH6yWZGLo9YkZV0Q2DPJ8PQRDweLzYbXaUdPqSPi5G13WSyQReb+5ecLKQ6O3lzNEjfPP+
      1XjyCxBFEZtj+Bc1DUPn0JuvcfX1i/CXVWSPd7e3oaRTE1cAuqYhiuKwApAkiWhPpH9nB9A0
      DcNgSLgAfccS8TiOHDcwFwMjy4BNXdcxDANVVTEMA0mSsgIEcDmdaPrQ/Wo0Xcdusw/6Hk6X
      i4ymXdLHxSSTSSRJGjIaTkZ6OsPkFfrxl5WPWPZCyxm629u4ZvHNg44noj2UVEyZuAKw2e2U
      lPRtDWYYBvF4jNbW82iahs/nIxAsyzaqgYYofKaRdXd10dXViSRJBILBIaHJSLhcbsorKrMN
      ThRFBAREaexu6Wh9JJMJkokEfr85dp9WU0l0XSfa2YFh6KSTCd6p3zmk3IcH9tJyrIm7f7AO
      OcfvOym6i4HQIR6Po6rqoJ4X+np5NaNmG1JPJIIsy+T5Rrcf8WjQdZ1UOtUXLgkCmqahaVrW
      ZzKVQhKlIddJooiiKui6nhVsKpnEO0zC/FkfAxiGQSwWw+czz25YRcFyREnE5fUhCCIOl5tw
      67lBZdLJBAd/10DLR0d57debBp2rXbifb/z5KsKt5yauACKRCKIgZGPnWCyGqqrYbLZs47Pb
      7ei6Tkc4hNPpRJZlNE0jraQpLv5imwgahoGqKNj6Z326ujqRRBG73Y4gCNgdDiKRbvz+YhQl
      TTwWIxAMDrEj22yIgkBvNIovP59EIo6iKtgdjkv6GEBRlP48I/d2vZMNT34+bq+P915/hSV3
      fYeMqlI1+48GlXG43Hz/p78YdGzPjhcJTK2mduFNaFoGu8M5cQXg8/no6AgTPh3CMIzsFKEk
      Sf0zOyFSyQQIAvn5BRQW9u1mq6oqsd5eoj09g+wVFfkp8vvp7u4mo6qUlJaSSqX4Q+v5bC7x
      2bKFRUV0R7qJ9a+Y83g8lAYC2anUgoJCwqF2zpw6iSjLBEoD2TArHo8R7ekhWFaOIAgU+Ytp
      b7tAOBzCbrcTCJYhSRKGYVzSB0A02jPsaDGZEQSRpX+2ksZ/3sxT9yxHFEXWb38dgHfqd9LV
      3sad33/skjYkSebWlQ9ZSyI/y8DcfWGRf1AvO9aEwyE8Hi9ut3vcfID5lkQqqRSv/NPP+fo9
      D1BSOXVU10zYJHg8UBQFl8s9ro0/k8kgS/K4N34z0n62mRlz/3jUjR8mSRI8VjidzkFPescD
      WZYpLMr1zwUsvghTZs5myszZn+saawSwMDWWACxMjSUAC1NjCcDC1PwfFu7XMMv9w84AAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
